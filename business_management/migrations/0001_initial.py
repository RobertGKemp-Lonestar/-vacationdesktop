# Generated by Django 4.2.23 on 2025-09-10 21:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rbac', '0005_add_created_for_field_to_support_tickets'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('preferred_communication', models.CharField(choices=[('EMAIL', 'Email'), ('PHONE', 'Phone'), ('TEXT', 'Text/SMS'), ('MAIL', 'Postal Mail')], default='EMAIL', max_length=20)),
                ('budget_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_destinations', models.TextField(blank=True, help_text='Comma-separated list of preferred destinations')),
                ('travel_style', models.TextField(blank=True, help_text='Luxury, budget, adventure, family, etc.')),
                ('special_needs', models.TextField(blank=True, help_text='Dietary restrictions, accessibility needs, etc.')),
                ('lead_source', models.CharField(choices=[('WEBSITE', 'Website Inquiry'), ('REFERRAL', 'Referral'), ('SOCIAL_MEDIA', 'Social Media'), ('EMAIL_MARKETING', 'Email Marketing'), ('WALK_IN', 'Walk-in'), ('REPEAT_CLIENT', 'Repeat Client'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('vip_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_contact_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='rbac.tenant')),
            ],
            options={
                'db_table': 'clients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('VIEWED', 'Viewed by Client'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Paid in Full'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('terms', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='business_management.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'invoices',
                'ordering': ['-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CHECK', 'Check'), ('CREDIT_CARD', 'Credit Card'), ('BANK_TRANSFER', 'Bank Transfer'), ('ONLINE', 'Online Payment'), ('OTHER', 'Other')], max_length=20)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='business_management.invoice')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trip_name', models.CharField(max_length=200)),
                ('trip_type', models.CharField(choices=[('LEISURE', 'Leisure'), ('BUSINESS', 'Business'), ('HONEYMOON', 'Honeymoon'), ('FAMILY', 'Family'), ('GROUP', 'Group'), ('CRUISE', 'Cruise'), ('TOUR', 'Guided Tour'), ('ADVENTURE', 'Adventure'), ('LUXURY', 'Luxury'), ('BUDGET', 'Budget')], default='LEISURE', max_length=20)),
                ('status', models.CharField(choices=[('INQUIRY', 'Inquiry'), ('QUOTE_REQUESTED', 'Quote Requested'), ('QUOTED', 'Quoted'), ('BOOKED', 'Booked'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='INQUIRY', max_length=20)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('departure_location', models.CharField(blank=True, max_length=200)),
                ('destination', models.CharField(blank=True, max_length=200)),
                ('destinations', models.TextField(blank=True, help_text='Multiple destinations, one per line')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quoted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('number_of_travelers', models.PositiveIntegerField(default=1)),
                ('special_requests', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='business_management.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trips',
                'ordering': ['-departure_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('relationship_to_client', models.CharField(choices=[('PRIMARY', 'Primary Traveler'), ('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('FAMILY', 'Family Member'), ('FRIEND', 'Friend'), ('COLLEAGUE', 'Colleague'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('passport_number', models.CharField(blank=True, max_length=50)),
                ('passport_expiry', models.DateField(blank=True, null=True)),
                ('special_needs', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='business_management.trip')),
            ],
            options={
                'db_table': 'trip_participants',
                'ordering': ['trip', 'relationship_to_client', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='TripCommunication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('communication_type', models.CharField(choices=[('QUOTE', 'Quote/Proposal'), ('CONFIRMATION', 'Booking Confirmation'), ('ITINERARY', 'Itinerary Update'), ('PAYMENT_REMINDER', 'Payment Reminder'), ('TRAVEL_DOCS', 'Travel Documents'), ('PRE_DEPARTURE', 'Pre-Departure Info'), ('EMERGENCY', 'Emergency Communication'), ('FOLLOW_UP', 'Post-Trip Follow-up')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_delivered', models.BooleanField(default=False)),
                ('sent_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_communications', to='business_management.trip')),
            ],
            options={
                'db_table': 'trip_communications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('installment_number', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_schedule', to='business_management.invoice')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business_management.payment')),
            ],
            options={
                'db_table': 'payment_schedules',
                'ordering': ['invoice', 'installment_number'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='business_management.invoice')),
            ],
            options={
                'db_table': 'invoice_line_items',
                'ordering': ['invoice', 'id'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='business_management.trip'),
        ),
        migrations.CreateModel(
            name='ClientNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('GENERAL', 'General Note'), ('CALL_LOG', 'Call Log'), ('MEETING', 'Meeting Notes'), ('PREFERENCE', 'Preference Note'), ('ISSUE', 'Issue/Problem'), ('FOLLOW_UP', 'Follow-up Required')], default='GENERAL', max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='business_management.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'client_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('VISA', 'Visa'), ('INSURANCE', 'Travel Insurance'), ('ID', 'Government ID'), ('MEDICAL', 'Medical Records'), ('EMERGENCY_CONTACT', 'Emergency Contact'), ('PHOTO', 'Photo'), ('CONTRACT', 'Contract/Agreement'), ('OTHER', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='client_documents/%Y/%m/')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='For passports, visas, etc.', null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='business_management.client')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'client_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientCommunication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('communication_type', models.CharField(choices=[('EMAIL', 'Email'), ('PHONE', 'Phone Call'), ('SMS', 'SMS/Text'), ('MEETING', 'In-Person Meeting'), ('VIDEO_CALL', 'Video Call'), ('MAIL', 'Postal Mail'), ('OTHER', 'Other')], max_length=20)),
                ('direction', models.CharField(choices=[('OUTBOUND', 'Outbound'), ('INBOUND', 'Inbound')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('email_message_id', models.CharField(blank=True, help_text='Email Message-ID for threading', max_length=200)),
                ('email_delivery_status', models.CharField(blank=True, max_length=50)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='business_management.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='communications', to='business_management.trip')),
            ],
            options={
                'db_table': 'client_communications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripItinerary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_number', models.PositiveIntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('accommodation', models.CharField(blank=True, max_length=200)),
                ('activities', models.TextField(blank=True)),
                ('meals', models.TextField(blank=True)),
                ('transportation', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itinerary_days', to='business_management.trip')),
            ],
            options={
                'db_table': 'trip_itineraries',
                'ordering': ['trip', 'day_number'],
                'unique_together': {('trip', 'day_number')},
            },
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['client', 'status'], name='trips_client__ab1af2_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['departure_date'], name='trips_departu_03561c_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['status'], name='trips_status_b30e85_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paymentschedule',
            unique_together={('invoice', 'installment_number')},
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['client', 'status'], name='invoices_client__0b289b_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='invoices_due_dat_039a25_idx'),
        ),
        migrations.AddIndex(
            model_name='clientcommunication',
            index=models.Index(fields=['client', 'communication_type'], name='client_comm_client__e9a63a_idx'),
        ),
        migrations.AddIndex(
            model_name='clientcommunication',
            index=models.Index(fields=['client', 'created_at'], name='client_comm_client__510d9b_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['tenant', 'email'], name='clients_tenant__fdb304_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['tenant', 'last_name', 'first_name'], name='clients_tenant__e4bc64_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['tenant', 'is_active'], name='clients_tenant__fa48dd_idx'),
        ),
    ]
